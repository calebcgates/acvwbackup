#! /bin/bash

echo << "EOF"
         _                                                          
        dM.                                                         
       ,MMb                                                         
       d'YM.   ___  __    ___   ___  __      ___  ___   ___ ___  __ 
      ,P `Mb   `MM 6MM  6MMMMb  `MM 6MMb   6MMMMb `MM    MM `MM 6MM 
      d'  YM.   MM69 " 8M'  `Mb  MMM9 `Mb 8M'  `Mb MM    MM  MM69 "
     ,P   `Mb   MM'        ,oMM  MM'   MM     ,oMM MM    MM  MM'    
     d'    YM.  MM     ,6MM9'MM  MM    MM ,6MM9'MM MM    MM  MM   
    ,MMMMMMMMb  MM     MM'   MM  MM    MM MM'   MM MM    MM  MM     
    d'      YM. MM     MM.  ,MM  MM    MM MM.  ,MM YM.   MM  MM     
  _dM_     _dMM_MM_    `YMMM9'Yb_MM_  _MM_`YMMM9'Yb.YMMM9MM__MM_    
EOF
echo ""
echo "Aranaur's Complete /var/www (and MySQL) Backup installation script."
echo "Find other projects at http://drewgates.com"
echo "-----------------------------------------"
echo "This script will walk you through installation of ACvwBackup"
read -p "Press [Enter] key to start installation..."
clear

#THIS SCRIPT CREATES THE DIRECTORIES FOR THE DEFAULT PATHS BELOW.
#IF YOU CHANGE THE SETTINGS BELOW, YOU MUST CREATE THOSE DIRECTORIES BEFORE RUNNING THIS SCRIPT.
#configuration file name (full path)
conffile='~/www-backup/config/wwb-config.conf'
touch $conffile
#installation path (should be same path as configuration file path)
installat='~/www-backup'

#INSTALL DEPENDENCIES

#Create bin directory
#Generate conf file
mkdir ~/www-backup
mkdir ~/www-backup/config/
echo "#! /bin/bash" > $conffile
echo "#USER CONFIGURATION. FILL OUT FIELDS AS NECESSARY. BE CAREFUL." >> $conffile
echo "###-------START-CONFIGURATION-----------------------------------------###" >> $conffile
echo "#Backup File Prefix (e.g. the 'backup' of backup20141104.tar.gz)" >> $conffile

#Create CONFIG FILE:
echo "Let's set up your config file."
echo "Your configuration can be changed at any time"
echo "and is located in $conffile"
echo ""
echo ""
echo "Your Backup file prefix will prepend the date information on your archive file."
echo "(e.g. the 'backup' of backup20141104.tar.gz)"
echo "Using 'www-backup' (no quotes) is recommended."
read -p "Enter your backup file prefix" backupfp
echo "backupfp='$myname'" >> $conffile
echo "sqlfp='$myname'" >> $conffile
clear

echo "Now for your MySQL information."
echo "If you want to dump all databases, enter '--all-databases' as database name."
read -p "Enter your database name" dbname
echo "database='$dbname'" >> $conffile
read -p "Enter your database username. DO NOT USE 'root'!" dbu
echo "dbuser='$dbu'" >> $conffile
read -p "Enter your database password:" pass
echo "pass='$pass'" >> $conffile
echo "#MYSQL ROOT override: allow mysql to be exported using root account --NOT RECOMMENDED)" >> $conffile
echo "#Enter only yes or no." >> $conffile
echo "rootoverride='no'" >> $conffile

#CHECKSUMS

echo "#Checksums (SHA256):" >> $conffile
echo "#Local log file:" >> $conffile
cd $installat
mkdir log
echo "shalog='$installat/sum.log'" >> $conffile
echo "Enter an email address to receive sha checksums of backups to be used for security."
read -p "Email:" shamail
echo "#Destination email:" >> $conffile
echo "email='$shamail'" >> $conffile

clear
echo "######------------############-------------######"
echo "                 Email Contacts"
echo "######------------############-------------######"
echo ""
echo "The next few settings will have no effect unless you properly installed exim4."
echo "It is reccomended that you check test exim4 configuration after this script completes."
echo "You can test exim configuration by running ~/TESTEXIM.sh"
echo ""
echo ""
echo "#Contacts:" >> $conffile
echo "#Primary Notification contact:" >> $conffile
echo "Enter an email address as your primary contact for daily backup notifications:"
read -p "Email:" adem
echo "admin='$adem'" >> $conffile
echo "#Secondary Notification contact:" >> $conffile
echo "Enter a secondary notification contact (or press [Enter] to leave blank."
read -p 'Email:" 2adem
echo "2dry='$2adem'
touch ~/TESTEXIM.sh
echo "#! /bin/bash" > ~/TESTEXIM.sh
echo "mail -s "ACvwBackup: IT WORKS" $email <<< `Sending email is configured correctly. ACvwBackup's notification settings should function properly.`" >> TEXTEXIM.sh

echo "#Remote Server IP/FQDN" >> $conffile
read -p "Enter the IP or Domain of backup server:" fqdn
echo "ip='$fqdn'" >> $conffile
echo "#Remote Backup Directory (NO TRAILING "/")" >> $conffile
read -p "Enter the remote backup folder path on remote server (NO TRAILING "/". ex. /home/test/backups) bacd
echo "bd='$bacd'" >> $conffile
echo "#Remote Server Username (I created an account called 'backups', do whatever you want)" >> $conffile
read -p "Remote server username (I created an account called 'backups', do whatever you want)" susr
echo "rsuser='$susr'" >> $conffile

echo "###--------END-CONFIGURATION------------------------------------------###

#installs scripts to directory denoted as $installat above.
cd $installad
mkdir bin
cd bin
wget https://raw.githubusercontent.com/aranaur/acvwbackup/master/www-backup
chmod +x www-backup
wget https://raw.githubusercontent.com/aranaur/acvwbackup/master/cron

xcr=$(cat cron)
username='echo $USER'
(crontab -u userhere -l; echo "$xcr" ) | crontab -u $username -

#Asks if RSA key exchange is working.
#If not
#--prompts for RSA key name (or uses id_rsa if none)
#--ssh-copy-id to backup server
#--user will have to enter password at prompt.

#adds cron jobs

#######-------CREDITS-------#######
clear
echo "This script and program created by Aranaur (Drew Gates) for CGAMWR.com"
echo "  ______                       _______       __                                      
echo " |   _  \ .----.-----.--.--.--|   _   .---.-|  |_.-----.-----.  .----.-----.--------.
echo " |.  |   \|   _|  -__|  |  |  |.  |___|  _  |   _|  -__|__ --|__|  __|  _  |        |
echo " |.  |    |__| |_____|________|.  |   |___._|____|_____|_____|__|____|_____|__|__|__|
echo " |:  1    /                   |:  1   |                                              
echo " |::.. . /                    |::.. . |                                              
echo " `------'                     `-------'                                              
echo ""
read -p "Press [Enter] to finish."
clear
echo "Installation complete."

#####--------END CREDITS-----------###########
#####--------END SCRIPT------------###########
